# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('inrpp', ['core', 'network'])
    module.source = [
        'model/inrpp-route.cc',        
        'model/inrpp-cache.cc',
        'model/inrpp-l3-protocol.cc',    
        'model/inrpp-header.cc', 
        'model/inrpp-tail-queue.cc',  
        'model/inrpp-interface.cc',    
        'model/inrpp-tag.cc',   
        'model/tcp-option-inrpp-back.cc',     
        'model/tcp-inrpp.cc',                                           
        'helper/inrpp-stack-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('inrpp')

    headers = bld(features='ns3header')
    headers.module = 'inrpp'
    headers.source = [
        'model/inrpp-route.h',        
        'model/inrpp-cache.h',        
        'model/inrpp-l3-protocol.h',    
        'model/inrpp-header.h',
        'model/inrpp-interface.h',    
        'model/inrpp-tail-queue.h',          
        'model/inrpp-tag.h',  
        'model/tcp-option-inrpp-back.h',   
        'model/tcp-inrpp.h',                                                                                                        
        'helper/inrpp-stack-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    bld.ns3_python_bindings()

